# Generated by Django 4.2.6 on 2024-06-06 17:00

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.constraints
import django.db.models.deletion
import library.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LibraryGroup',
            fields=[
                ('name', models.CharField(help_text='group name', max_length=40, primary_key=True, serialize=False, unique=True, verbose_name='group name')),
                ('creator', models.ForeignKey(help_text='person who created the group', on_delete=models.SET('DELETED'), related_name='created_groups', related_query_name='created_group', to=settings.AUTH_USER_MODEL, verbose_name='creator of the group')),
                ('users', models.ManyToManyField(help_text='users who are part of this group', related_name='library_groups', related_query_name='library_group', to=settings.AUTH_USER_MODEL, verbose_name='group members')),
            ],
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(help_text='category of the book(fantasy, horror, etc.)', max_length=20, verbose_name='category_name')),
                ('position', models.PositiveIntegerField(default=0, help_text='position in the list of categories', verbose_name='position')),
                ('user', models.ForeignKey(help_text='user, to whom add category', on_delete=django.db.models.deletion.CASCADE, related_name='book_categories', related_query_name='book_category', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='title of the book', max_length=60, verbose_name='title')),
                ('author', models.CharField(blank=True, help_text='author of the book', max_length=60, verbose_name='author')),
                ('started', models.DateField(blank=True, default=datetime.date.today, help_text='date when started reading', null=True, verbose_name='started')),
                ('finished', models.DateField(blank=True, default=None, help_text='date when finished reading', null=True, verbose_name='finished')),
                ('rating', models.PositiveIntegerField(blank=True, default=None, help_text='book rating from 1 to 10', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='rating')),
                ('comment', models.TextField(blank=True, help_text='comment on this book. Is it bad? Good?', verbose_name='comment')),
                ('file', models.FileField(blank=True, default=None, help_text='book file to upload', null=True, upload_to=library.models.Book._get_book_assosiated_file_upload_path, verbose_name='book file')),
                ('cover', models.ImageField(blank=True, default=None, help_text='image of the cover of the book', null=True, upload_to=library.models.Book._get_book_assosiated_file_upload_path, verbose_name='cover image')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.bookcategory', verbose_name='category')),
                ('user', models.ForeignKey(help_text='user who has this book in their library', on_delete=django.db.models.deletion.CASCADE, related_name='books', related_query_name='book', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.AddConstraint(
            model_name='bookcategory',
            constraint=models.UniqueConstraint(fields=('user', 'category_name'), name='library_bookcategory_user_and_category_unique'),
        ),
        migrations.AddConstraint(
            model_name='bookcategory',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('user', 'position'), name='library_bookcategory_user_and_postion_unique'),
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.CheckConstraint(check=models.Q(('started__gt', models.F('finished')), _negated=True), name='library_book_finished_before_started'),
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.UniqueConstraint(fields=('user', 'title', 'author'), name='library_book_user_title_author_unique'),
        ),
    ]
