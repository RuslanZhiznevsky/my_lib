# Generated by Django 4.2.6 on 2024-02-25 12:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('library', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='usercategory',
            name='user',
            field=models.ForeignKey(help_text='user, to whom add category', on_delete=django.db.models.deletion.CASCADE, related_name='user_categories', related_query_name='user_category', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='librarygroup',
            name='creator',
            field=models.ForeignKey(help_text='person who created the group', on_delete=models.SET('DELETED'), related_name='created_groups', related_query_name='created_group', to=settings.AUTH_USER_MODEL, verbose_name='creator of the group'),
        ),
        migrations.AddField(
            model_name='librarygroup',
            name='users',
            field=models.ManyToManyField(help_text='users who are part of this group', related_name='library_groups', related_query_name='library_group', to=settings.AUTH_USER_MODEL, verbose_name='group members'),
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.usercategory', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='book',
            name='user',
            field=models.ForeignKey(help_text='user who has this book in their library', on_delete=django.db.models.deletion.CASCADE, related_name='books', related_query_name='book', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddConstraint(
            model_name='usercategory',
            constraint=models.UniqueConstraint(fields=('user', 'category_name'), name='library_usercategory_user_and_category_unique'),
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.CheckConstraint(check=models.Q(('started__gt', models.F('finished')), _negated=True), name='library_book_finished_before_started'),
        ),
    ]
